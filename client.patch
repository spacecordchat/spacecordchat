diff --git a/src/components/ChannelList/ChannelListItem.tsx b/src/components/ChannelList/ChannelListItem.tsx
index 5a18378..0d750a3 100644
--- a/src/components/ChannelList/ChannelListItem.tsx
+++ b/src/components/ChannelList/ChannelListItem.tsx
@@ -72,7 +72,7 @@ function ChannelListItem({ channel, isCategory, active }: Props) {
 				// prevent navigating to non-text channels
 				if (!channel.isTextChannel) return;
 
-				navigate(`/channels/${channel.guildId}/${channel.id}`);
+				navigate(`./../${channel.id}`);
 			}}
 			ref={contextMenu.setReferenceElement}
 			onContextMenu={(e) => contextMenu.onContextMenu(e, { type: "channel", channel })}
@@ -153,8 +153,8 @@ function ChannelListItem({ channel, isCategory, active }: Props) {
 										createChannelDown
 											? "var(--text-header)"
 											: createChannelHovered
-											? "var(--text)"
-											: "var(--text-secondary)"
+												? "var(--text)"
+												: "var(--text-secondary)"
 									}
 								/>
 							</span>
diff --git a/src/components/ChannelSidebar.tsx b/src/components/ChannelSidebar.tsx
index 23eefbe..d2ff63f 100644
--- a/src/components/ChannelSidebar.tsx
+++ b/src/components/ChannelSidebar.tsx
@@ -32,10 +32,10 @@ function ChannelSidebar() {
 				!isDesktop
 					? {
 							width: size,
-					  }
+						}
 					: {
 							flex: "0 0 240px",
-					  }
+						}
 			}
 		>
 			{/* TODO: replace with dm search if no guild */}
diff --git a/src/components/GuildItem.tsx b/src/components/GuildItem.tsx
index 7b2e21f..6480479 100644
--- a/src/components/GuildItem.tsx
+++ b/src/components/GuildItem.tsx
@@ -30,7 +30,9 @@ const Wrapper = styled(Container)<{ active?: boolean; hasImage?: boolean }>`
 	border-radius: ${(props) => (props.active ? "30%" : "50%")};
 	background-color: ${(props) =>
 		props.hasImage ? "transparent" : props.active ? "var(--primary)" : "var(--background-secondary)"};
-	transition: border-radius 0.2s ease, background-color 0.2s ease;
+	transition:
+		border-radius 0.2s ease,
+		background-color 0.2s ease;
 
 	&:hover {
 		border-radius: 30%;
@@ -65,7 +67,7 @@ function GuildItem({ guild, active }: Props) {
 	const doNavigate = () => {
 		const channel = guild.channels.find((x) => {
 			const permission = Permissions.getPermission(app.account!.id, guild, x);
-			return permission.has("VIEW_CHANNEL") && x.type !== ChannelType.GuildCategory;
+			return x.type !== ChannelType.GuildCategory;
 		});
 		navigate(`/channels/${guild.id}${channel ? `/${channel.id}` : ""}`);
 	};
diff --git a/src/components/MemberList/MemberList.tsx b/src/components/MemberList/MemberList.tsx
index 0246c25..6860c66 100644
--- a/src/components/MemberList/MemberList.tsx
+++ b/src/components/MemberList/MemberList.tsx
@@ -59,7 +59,7 @@ function MemberList() {
 									<MemberListItem item={x} />
 								))}
 							/>
-					  ))
+						))
 					: null}
 			</List>
 		</Container>
diff --git a/src/components/contextMenus/GuildContextMenu.tsx b/src/components/contextMenus/GuildContextMenu.tsx
index a0aad1c..c6fc1ce 100644
--- a/src/components/contextMenus/GuildContextMenu.tsx
+++ b/src/components/contextMenus/GuildContextMenu.tsx
@@ -36,7 +36,7 @@ function GuildContextMenu({ guild }: MenuProps) {
 	 * Open invite creation modal
 	 */
 	function openInviteCreateModal() {
-		const channel = guild.channels.find((x) => x.type === ChannelType.GuildText && x.hasPermission("VIEW_CHANNEL"));
+		const channel = guild.channels.find((x) => x.type === ChannelType.GuildText);
 		if (!channel) {
 			logger.error("Failed to find suitable channel for invite creation");
 			return;
diff --git a/src/components/floating/UserProfilePopout.tsx b/src/components/floating/UserProfilePopout.tsx
index af8aff6..7850d2a 100644
--- a/src/components/floating/UserProfilePopout.tsx
+++ b/src/components/floating/UserProfilePopout.tsx
@@ -22,7 +22,9 @@ const Container = styled.div`
 	width: 340px;
 	max-height: 600px;
 	overflow: hidden;
-	box-shadow: 0 0 0 1px rgb(0 0 0 / 15%), 0 4px 8px rgb(0 0 0 / 15%);
+	box-shadow:
+		0 0 0 1px rgb(0 0 0 / 15%),
+		0 4px 8px rgb(0 0 0 / 15%);
 	color: var(--text);
 `;
 
diff --git a/src/components/messaging/Chat.tsx b/src/components/messaging/Chat.tsx
index 723992f..2da34fd 100644
--- a/src/components/messaging/Chat.tsx
+++ b/src/components/messaging/Chat.tsx
@@ -128,22 +128,6 @@ function Chat() {
 		);
 	}
 
-	if (!activeChannel.hasPermission("VIEW_CHANNEL")) {
-		return (
-			<WrapperTwo>
-				<span
-					style={{
-						color: "var(--text-secondary)",
-						fontSize: "1.5rem",
-						margin: "auto",
-					}}
-				>
-					You do not have permission to view this channel
-				</span>
-			</WrapperTwo>
-		);
-	}
-
 	return (
 		<WrapperTwo>
 			<ChatHeader channel={activeChannel} />
diff --git a/src/components/messaging/MessageInput.tsx b/src/components/messaging/MessageInput.tsx
index 4267fa5..f6af678 100644
--- a/src/components/messaging/MessageInput.tsx
+++ b/src/components/messaging/MessageInput.tsx
@@ -191,16 +191,9 @@ function MessageInput({ channel }: Props) {
 						id="messageinput"
 						// maxLength={4000} // TODO: this should come from the server
 						value={content}
-						placeholder={
-							channel.hasPermission("SEND_MESSAGES")
-								? `Message ${
-										channel.type === ChannelType.DM
-											? channel.recipients?.[0].username
-											: "#" + channel.name
-								  }`
-								: "You do not have permission to send messages in this channel."
-						}
-						disabled={!channel.hasPermission("SEND_MESSAGES")}
+						placeholder={`Message ${
+							channel.type === ChannelType.DM ? channel.recipients?.[0].username : "#" + channel.name
+						}`}
 						onChange={onChange}
 						onKeyDown={onKeyDown}
 					/>
diff --git a/src/components/messaging/MessageList.tsx b/src/components/messaging/MessageList.tsx
index 6c90a06..19d632f 100644
--- a/src/components/messaging/MessageList.tsx
+++ b/src/components/messaging/MessageList.tsx
@@ -50,11 +50,6 @@ function MessageList({ guild, channel }: Props) {
 		const hasPermission = permission.has("READ_MESSAGE_HISTORY");
 		setCanView(hasPermission);
 
-		if (!hasPermission) {
-			logger.debug("User cannot view this channel. Aborting initial message fetch.");
-			return;
-		}
-
 		if (guild && channel && channel.messages.count === 0) {
 			channel.getMessages(app, true).then((r) => {
 				if (r < 50) {
@@ -103,55 +98,43 @@ function MessageList({ guild, channel }: Props) {
 	return (
 		<MessageAreaWidthContext.Provider value={(width ?? 0) - MESSAGE_AREA_PADDING}>
 			<Container id="scrollable-div" ref={ref}>
-				{canView ? (
-					<InfiniteScroll
-						dataLength={messageGroups.length}
-						next={fetchMore}
-						style={{
-							display: "flex",
-							flexDirection: "column-reverse",
-							marginBottom: 30,
-							overflow: "hidden",
-						}} // to put endMessage and loader to the top.
-						hasMore={hasMore}
-						inverse={true}
-						loader={
-							<PulseLoader
-								style={{
-									display: "flex",
-									justifyContent: "center",
-									alignContent: "center",
-									margin: 30,
-								}}
-								color="var(--primary)"
-							/>
-						}
-						// FIXME: seems to be broken in react-infinite-scroll-component when using inverse
-						scrollThreshold={0.5}
-						scrollableTarget="scrollable-div"
-						endMessage={
-							<EndMessageContainer>
-								<h1 style={{ fontWeight: 700, margin: "8px 0" }}>Welcome to #{channel.name}!</h1>
-								<p style={{ color: "var(--text-secondary)" }}>
-									This is the start of the #{channel.name} channel.
-								</p>
-								<HorizontalDivider />
-							</EndMessageContainer>
-						}
-					>
-						{messageGroups.map((group) => renderGroup(group))}
-					</InfiniteScroll>
-				) : (
-					<div
-						style={{
-							marginBottom: 30,
-							paddingLeft: 20,
-							color: "var(--text-secondary)",
-						}}
-					>
-						You do not have permission to read the history of this channel.
-					</div>
-				)}
+				<InfiniteScroll
+					dataLength={messageGroups.length}
+					next={fetchMore}
+					style={{
+						display: "flex",
+						flexDirection: "column-reverse",
+						marginBottom: 30,
+						overflow: "hidden",
+					}} // to put endMessage and loader to the top.
+					hasMore={hasMore}
+					inverse={true}
+					loader={
+						<PulseLoader
+							style={{
+								display: "flex",
+								justifyContent: "center",
+								alignContent: "center",
+								margin: 30,
+							}}
+							color="var(--primary)"
+						/>
+					}
+					// FIXME: seems to be broken in react-infinite-scroll-component when using inverse
+					scrollThreshold={0.5}
+					scrollableTarget="scrollable-div"
+					endMessage={
+						<EndMessageContainer>
+							<h1 style={{ fontWeight: 700, margin: "8px 0" }}>Welcome to #{channel.name}!</h1>
+							<p style={{ color: "var(--text-secondary)" }}>
+								This is the start of the #{channel.name} channel.
+							</p>
+							<HorizontalDivider />
+						</EndMessageContainer>
+					}
+				>
+					{messageGroups.map((group) => renderGroup(group))}
+				</InfiniteScroll>
 			</Container>
 		</MessageAreaWidthContext.Provider>
 	);
diff --git a/src/components/modals/BanMemberModal.tsx b/src/components/modals/BanMemberModal.tsx
index faf0425..9227a38 100644
--- a/src/components/modals/BanMemberModal.tsx
+++ b/src/components/modals/BanMemberModal.tsx
@@ -54,7 +54,7 @@ export function BanMemberModal({ target, type, ...props }: ModalProps<"ban_membe
 				data.reason
 					? {
 							"X-Audit-Log-Reason": data.reason,
-					  }
+						}
 					: undefined,
 			)
 			.then(() => {
diff --git a/src/components/modals/DeleteMessageModal.tsx b/src/components/modals/DeleteMessageModal.tsx
index f96acef..a13de29 100644
--- a/src/components/modals/DeleteMessageModal.tsx
+++ b/src/components/modals/DeleteMessageModal.tsx
@@ -6,7 +6,9 @@ import { Modal } from "./ModalComponents";
 const PreviewContainer = styled.div`
 	background-color: var(--background-secondary);
 	margin-top: 16px;
-	box-shadow: 0 0 0 1px var(--background-tertiary), 0 2px 10px 0 var(--background-tertiary);
+	box-shadow:
+		0 0 0 1px var(--background-tertiary),
+		0 2px 10px 0 var(--background-tertiary);
 	border-radius: 4px;
 	overflow: hidden;
 	padding: 5px 6px;
diff --git a/src/components/modals/KickMemberModal.tsx b/src/components/modals/KickMemberModal.tsx
index 3dbed8c..5ac7e03 100644
--- a/src/components/modals/KickMemberModal.tsx
+++ b/src/components/modals/KickMemberModal.tsx
@@ -54,7 +54,7 @@ export function KickMemberModal({ target, ...props }: ModalProps<"kick_member">)
 				data.reason
 					? {
 							"X-Audit-Log-Reason": data.reason,
-					  }
+						}
 					: undefined,
 			)
 			.then(() => {
diff --git a/src/components/modals/ModalComponents.tsx b/src/components/modals/ModalComponents.tsx
index 28a023f..d966b9d 100644
--- a/src/components/modals/ModalComponents.tsx
+++ b/src/components/modals/ModalComponents.tsx
@@ -63,10 +63,10 @@ export const ModalBase = styled.div<{ closing?: boolean }>`
 					> div {
 						animation-name: ${animationZoomOut};
 					}
-			  `
+				`
 			: css`
 					animation-name: ${animationFadeIn};
-			  `}
+				`}
 `;
 
 /**
diff --git a/src/contexts/ContextMenuContextProvider.tsx b/src/contexts/ContextMenuContextProvider.tsx
index 3cb0eb9..e5ff7a0 100644
--- a/src/contexts/ContextMenuContextProvider.tsx
+++ b/src/contexts/ContextMenuContextProvider.tsx
@@ -15,7 +15,7 @@ export const ContextMenuContextProvider: React.FC<any> = ({ children }) => {
 		? ContextMenuComponents[contextMenu.props.type]
 		: () => {
 				return null;
-		  };
+			};
 
 	return (
 		<ContextMenuContext.Provider
diff --git a/src/hooks/useFloating.tsx b/src/hooks/useFloating.tsx
index 0340cd0..571d9db 100644
--- a/src/hooks/useFloating.tsx
+++ b/src/hooks/useFloating.tsx
@@ -35,7 +35,7 @@ export default function ({
 		onOpenChange: setOpen,
 		whileElementsMounted: autoUpdate,
 		middleware: [
-			offset(type === "tooltip" && !offsetMiddlewareOffset ? 10 : offsetMiddlewareOffset ?? 5),
+			offset(type === "tooltip" && !offsetMiddlewareOffset ? 10 : (offsetMiddlewareOffset ?? 5)),
 			flip(),
 			shift({
 				padding: 8,
diff --git a/src/pages/LoginPage.tsx b/src/pages/LoginPage.tsx
index 74bc954..3419056 100644
--- a/src/pages/LoginPage.tsx
+++ b/src/pages/LoginPage.tsx
@@ -83,6 +83,12 @@ function LoginPage() {
 		setCaptchaSiteKey(undefined);
 		setMfaData(undefined);
 
+		if ("token@spacebar.chat" == data.login) {
+			// Token
+			app.setToken(data.password, true);
+			return;
+		}
+
 		app.rest
 			.post<IAPILoginRequest, IAPILoginResponse>(Routes.login(), {
 				login: data.login,
diff --git a/src/stores/ChannelStore.ts b/src/stores/ChannelStore.ts
index 153b4f9..061108b 100644
--- a/src/stores/ChannelStore.ts
+++ b/src/stores/ChannelStore.ts
@@ -28,7 +28,7 @@ export default class ChannelStore {
 
 	@action
 	addAll(channels: APIChannel[]) {
-		channels.forEach((channel) => this.add(channel));
+		channels?.forEach((channel) => this.add(channel));
 	}
 
 	get(id: string) {
diff --git a/src/stores/GatewayConnectionStore.ts b/src/stores/GatewayConnectionStore.ts
index dc7779f..c99c714 100644
--- a/src/stores/GatewayConnectionStore.ts
+++ b/src/stores/GatewayConnectionStore.ts
@@ -114,12 +114,12 @@ export default class GatewayConnectionStore {
 		this.logger.debug(`[Disconnect] ${this.url}`);
 		this.socket?.close(code, reason);
 	}
-	reconnecting=false;
+	reconnecting = false;
 	startReconnect() {
-		if(this.reconnecting)return;
-		this.reconnecting=true;
+		if (this.reconnecting) return;
+		this.reconnecting = true;
 		setTimeout(() => {
-			this.reconnecting=false;
+			this.reconnecting = false;
 			this.logger.debug("Starting reconnect...");
 			this.connect(this.url!);
 		}, this.reconnectTimeout);
@@ -239,12 +239,8 @@ export default class GatewayConnectionStore {
 			d: {
 				token: this.app.token!,
 				capabilities: 16381,
-				properties: {
-					browser: "Spacebar Web",
-					client_build_number: 0,
-					release_channel: "dev",
-					browser_user_agent: navigator.userAgent,
-				},
+				intents: 3276799,
+				properties: {},
 				compress: false,
 				presence: {
 					status: PresenceUpdateStatus.Online,
@@ -379,11 +375,14 @@ export default class GatewayConnectionStore {
 			}
 		};
 
-		this.initialHeartbeatTimeout = setTimeout(() => {
-			this.initialHeartbeatTimeout = null;
-			this.heartbeater = setInterval(heartbeaterFn, this.heartbeatInterval!);
-			heartbeaterFn();
-		}, Math.floor(Math.random() * this.heartbeatInterval!));
+		this.initialHeartbeatTimeout = setTimeout(
+			() => {
+				this.initialHeartbeatTimeout = null;
+				this.heartbeater = setInterval(heartbeaterFn, this.heartbeatInterval!);
+				heartbeaterFn();
+			},
+			Math.floor(Math.random() * this.heartbeatInterval!),
+		);
 	};
 
 	/**
@@ -476,7 +475,7 @@ export default class GatewayConnectionStore {
 		this.logger.info(`[Ready] took ${Date.now() - this.connectionStartTime!}ms`);
 		const { session_id, guilds, users, user, private_channels, sessions, read_state } = data;
 		this.sessionId = session_id;
-		this.session = (sessions as GatewaySession[]).find((x) => x.session_id === session_id);
+		this.session = (sessions as GatewaySession[])?.find((x) => x.session_id === session_id);
 
 		this.app.setUser(user);
 
@@ -487,7 +486,7 @@ export default class GatewayConnectionStore {
 		}
 
 		// TODO: store relationships
-		this.app.readStateStore.addAll(read_state.entries);
+		this.app.readStateStore.addAll(read_state?.entries);
 		this.app.privateChannels.addAll(private_channels);
 
 		if (data.merged_members) {
diff --git a/src/stores/ReadStateStore.ts b/src/stores/ReadStateStore.ts
index 811463e..fe74b75 100644
--- a/src/stores/ReadStateStore.ts
+++ b/src/stores/ReadStateStore.ts
@@ -28,7 +28,7 @@ export default class ReadStateStore {
 
 	@action
 	addAll(readstates: APIReadState[]) {
-		readstates.forEach((readstate) => this.add(readstate));
+		readstates?.forEach((readstate) => this.add(readstate));
 	}
 
 	/**
diff --git a/src/stores/RoleStore.ts b/src/stores/RoleStore.ts
index ab1d6f5..559201a 100644
--- a/src/stores/RoleStore.ts
+++ b/src/stores/RoleStore.ts
@@ -21,7 +21,7 @@ export default class RoleStore {
 
 	@action
 	addAll(roles: APIRole[]) {
-		roles.forEach((role) => this.add(role));
+		roles?.forEach((role) => this.add(role));
 	}
 
 	@computed
diff --git a/src/stores/objects/Guild.ts b/src/stores/objects/Guild.ts
index f573d85..39f9cb3 100644
--- a/src/stores/objects/Guild.ts
+++ b/src/stores/objects/Guild.ts
@@ -76,38 +76,38 @@ export default class Guild {
 		this.large = data.large;
 		this.guildScheduledEvents = data.guild_scheduled_events;
 		this.emojis = data.emojis;
-		this.name = data.properties.name;
-		this.description = data.properties.description;
-		this.icon = data.properties.icon;
-		this.splash = data.properties.splash;
-		this.banner = data.properties.banner;
-		this.features = data.properties.features;
-		this.preferredLocale = data.properties.preferred_locale;
-		this.ownerId = data.properties.owner_id;
-		this.applicationId = data.properties.application_id;
-		this.afkChannelId = data.properties.afk_channel_id;
-		this.afkTimeout = data.properties.afk_timeout;
-		this.systemChannelId = data.properties.system_channel_id;
-		this.verificationLevel = data.properties.verification_level;
-		this.explicitContentFilter = data.properties.explicit_content_filter;
-		this.defaultMessageNotifications = data.properties.default_message_notifications;
-		this.mfaLevel = data.properties.mfa_level;
-		this.vanityUrlCode = data.properties.vanity_url_code;
-		this.premiumTier = data.properties.premium_tier;
-		// this.premium_progress_bar_enabled = data.properties.premium_progress_bar_enabled; // FIXME: missing
-		this.systemChannelFlags = data.properties.system_channel_flags;
-		this.discoverySplash = data.properties.discovery_splash;
-		this.rulesChannelId = data.properties.rules_channel_id;
-		this.publicUpdatesChannelId = data.properties.public_updates_channel_id;
-		this.maxVideoChannelUsers = data.properties.max_video_channel_users!;
-		this.maxMembers = data.properties.max_members!;
-		this.nsfwLevel = data.properties.nsfw_level;
-		this.hubType = data.properties.hub_type;
+		this.name = data.properties?.name;
+		this.description = data.properties?.description;
+		this.icon = data.properties?.icon;
+		this.splash = data.properties?.splash;
+		this.banner = data.properties?.banner;
+		this.features = data.properties?.features;
+		this.preferredLocale = data.properties?.preferred_locale;
+		this.ownerId = data.properties?.owner_id;
+		this.applicationId = data.properties?.application_id;
+		this.afkChannelId = data.properties?.afk_channel_id;
+		this.afkTimeout = data.properties?.afk_timeout;
+		this.systemChannelId = data.properties?.system_channel_id;
+		this.verificationLevel = data.properties?.verification_level;
+		this.explicitContentFilter = data.properties?.explicit_content_filter;
+		this.defaultMessageNotifications = data.properties?.default_message_notifications;
+		this.mfaLevel = data.properties?.mfa_level;
+		this.vanityUrlCode = data.properties?.vanity_url_code;
+		this.premiumTier = data.properties?.premium_tier;
+		// this.premium_progress_bar_enabled = data.properties?.premium_progress_bar_enabled; // FIXME: missing
+		this.systemChannelFlags = data.properties?.system_channel_flags;
+		this.discoverySplash = data.properties?.discovery_splash;
+		this.rulesChannelId = data.properties?.rules_channel_id;
+		this.publicUpdatesChannelId = data.properties?.public_updates_channel_id;
+		this.maxVideoChannelUsers = data.properties?.max_video_channel_users!;
+		this.maxMembers = data.properties?.max_members!;
+		this.nsfwLevel = data.properties?.nsfw_level;
+		this.hubType = data.properties?.hub_type;
 
 		app.roles.addAll(data.roles);
 		app.channels.addAll(data.channels);
 
-		data.roles.forEach((role) => this.roles_.add(role.id));
+		data.roles?.forEach((role) => this.roles_.add(role.id));
 		data.channels?.forEach((channel) => this.channels_.add(channel.id));
 
 		makeObservable(this);
@@ -140,7 +140,7 @@ export default class Guild {
 	@computed
 	get acronym() {
 		return this.name
-			.split(" ")
+			?.split(" ")
 			.map((word) => word.substring(0, 1))
 			.join("");
 	}
@@ -148,16 +148,6 @@ export default class Guild {
 	@computed
 	get channels() {
 		let guildChannels = this.app.channels.all.filter((channel) => this.channels_.has(channel.id));
-		guildChannels = guildChannels.filter((channel) => {
-			if (channel.type === ChannelType.GuildCategory) {
-				// check if any children are visible
-				return guildChannels.some(
-					(child) => child.parentId === channel.id && child.hasPermission("VIEW_CHANNEL"),
-				);
-			}
-
-			return channel.hasPermission("VIEW_CHANNEL");
-		});
 		const topLevelChannels = guildChannels.filter((channel) => !channel.parentId);
 		const sortedChannels = topLevelChannels
 			.sort(compareChannels)
@@ -198,7 +188,7 @@ export default class Guild {
 			reason
 				? {
 						"X-Audit-Log-Reason": reason,
-				  }
+					}
 				: {},
 		);
 	}
@@ -214,7 +204,7 @@ export default class Guild {
 			reason
 				? {
 						"X-Audit-Log-Reason": reason,
-				  }
+					}
 				: {},
 		);
 	}
diff --git a/src/utils/REST.ts b/src/utils/REST.ts
index e2bb74f..ad65d57 100644
--- a/src/utils/REST.ts
+++ b/src/utils/REST.ts
@@ -4,10 +4,7 @@ import { Globals } from "./Globals";
 import Logger from "./Logger";
 import { RouteSettings } from "./constants";
 
-const DEFAULT_HEADERS = {
-	"User-Agent": "Spacebar-Client/1.0",
-	accept: "application/json",
-};
+const DEFAULT_HEADERS = {};
 
 export default class REST {
 	private readonly logger = new Logger("REST");
diff --git a/src/utils/constants.ts b/src/utils/constants.ts
index f2beddb..b5a7dec 100644
--- a/src/utils/constants.ts
+++ b/src/utils/constants.ts
@@ -6,10 +6,10 @@ export interface RouteSettings {
 }
 
 export const DefaultRouteSettings: RouteSettings = {
-	api: "https://api.old.server.spacebar.chat/api",
-	cdn: "https://cdn.old.server.spacebar.chat",
-	gateway: "wss://gateway.old.server.spacebar.chat",
-	wellknown: "https://spacebar.chat",
+	api: "https://discord.com/api",
+	cdn: "https://cdn.discordapp.com",
+	gateway: "wss://gateway.discord.gg",
+	wellknown: "https://discord.com",
 };
 
 // TODO: we should probably make our own
